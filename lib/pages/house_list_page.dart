import 'package:flutter/material.dart';
import 'package:test_task/pages/floors_page.dart';
import 'package:test_task/shared/models/house_model.dart';
import 'package:test_task/core/database_helper.dart';
import 'package:test_task/shared/widgets/add_house_dialog.dart';

class HouseListPage extends StatefulWidget {
  const HouseListPage({super.key});

  @override
  _HouseListPageState createState() => _HouseListPageState();
}

class _HouseListPageState extends State<HouseListPage> {
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _floorsController = TextEditingController();
  List<House> _houses = [];
  late DatabaseHelper databaseHelper;

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addPostFrameCallback((_) {
      databaseHelper = DatabaseHelper.instance;
      _loadHouses();
    });
  }

  void _loadHouses() async {
    _houses = await databaseHelper.getHouses();
    setState(() {});
  }

  void _addHouse(BuildContext context) async {
    String name = _nameController.text;
    String floorsText = _floorsController.text;

    if (name.isNotEmpty && floorsText.isNotEmpty) {
      int floors = int.tryParse(floorsText) ?? 0;
      if (floors > 0) {
        await databaseHelper.insertHouse(
            House.autoGenerated(name: name, floors: floors));
        _loadHouses();
        _nameController.clear();
        _floorsController.clear();
        Navigator.pop(context);
      } else {
        _showErrorDialog("Number of floors should be greater than 0.");
      }
    } else {
      _showErrorDialog("Please fill in all fields.");
    }
  }

  void _showErrorDialog(String message) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text('Error'),
          content: Text(message),
          actions: [
            ElevatedButton(
              onPressed: () {
                Navigator.pop(context);
              },
              child: const Text('OK'),
            ),
          ],
        );
      },
    );
  }

  void _showAddHouseForm() {
    showDialog(
      context: context,
      builder: (BuildContext dialogContext) {
        return AddHouseForm(
          nameController: _nameController,
          floorsController: _floorsController,
          addHouseCallback: _addHouse,
        );
      },
    );
  }

  void _showFloorListPage(int numberOfFloors, String houseName) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =>
            FloorListPage(
              houseName: houseName,
              numberOfFloors: numberOfFloors,
            ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Padding(
              padding: const EdgeInsets.only(top: 80.0),
              child: ElevatedButton(
                onPressed: _showAddHouseForm,
                style: ElevatedButton.styleFrom(
                  minimumSize: const Size(228, 40),
                ),
                child: const Text('Add House +', style: TextStyle(fontSize: 16)),
              ),
            ),
            ..._houses.map((house) {
              return Padding(
                padding: const EdgeInsets.only(top: 20.0),
                child: Dismissible(
                  key: Key(house.id.toString()),
                  direction: DismissDirection.horizontal,
                  onDismissed: (direction) {
                    _deleteHouse(house);
                  },
                  background: const Align(
                    alignment: Alignment.centerRight,
                    child: Padding(
                      padding: EdgeInsets.only(right: 20.0),
                    ),
                  ),
                  child: SizedBox(
                    width: 228,
                    height: 60,
                    child: Card(
                      child: GestureDetector(
                        onTap: () {
                          _showFloorListPage(house.floors, house.name);
                        },
                        child: ListTile(
                          contentPadding: EdgeInsets.zero,
                          title: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              const Text('House:', style: TextStyle(fontSize: 16),),
                              Text(house.name,  style: const TextStyle(fontSize: 16),),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              );
            }),
          ],
        ),
      ),
      bottomNavigationBar: const BottomAppBar(
        child: Row(
          children: [
            Text('Designed by Artem Bielov', style: TextStyle(
                fontSize: 16
            ),),
            SizedBox(width: 8),
          ],
        ),
      ),
    );
  }

  void _deleteHouse(House house) async {
    await databaseHelper.deleteHouse(house.id!);
    _loadHouses();
  }
}